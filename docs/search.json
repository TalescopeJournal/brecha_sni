[
  {
    "objectID": "notebooks/003_SNI_EDA.html",
    "href": "notebooks/003_SNI_EDA.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\nimport missingno as msno\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as mticker\n\n\n\n\n# import matplotlib as mpl\n\nplt.style.use('enerdata_square.mplstyle')\n\n\nf = \"../data/002_processed/sni.csv\"\ntmp = pd.read_csv(f)\n\n\nmsno.matrix(tmp)\n\n\n\n\n\n\n\n\n\ntmp.grado.unique()\n\narray(['DR.', 'DRA.', 'M. EN C.', 'QUIM.', 'LIC.', 'MED', 'Maestría',\n       'M.EN C.', 'M. EN I', 'MED.', 'MTRO.', 'BIOL.', 'ING.', 'M.C.',\n       'M. EN I.', 'MTRA.', 'M.V.Z.', 'MTR', 'Q.F.B', 'M. EN C',\n       'M. EN B.', 'ARQ.', 'FIS.', 'M. EN A', 'Q.F.B.', 'M.I.Q.',\n       'Q. F. B.', 'ESPECIALIDAD', 'M EN C.', 'MED. ESP.', 'M.I.',\n       'Q.B.P.', 'MTR0.', 'M. I.', 'M. C.', 'PSIC.', 'MAESTRIA', 'CP.',\n       nan, 'Especialidad', 'MAT.', 'BIOQ.', 'QFB.', 'M. EN A.', 'QUIM,.',\n       '-', 'LIC'], dtype=object)\n\n\n\n# SNI solo tiene los campos definidos con la lista grados,\n# pues son los únicos que se pueden identificar como hombre,mujer\ngrados = [\"DR.\",\"DRA.\",\"MTRO.\",\"MTRA.\"]\nsni = tmp[tmp[\"grado\"].isin(grados)].copy()\nmapeo_sexo = {\n    'DR.': 'H',\n    'MTRO.': 'H',\n    'DRA.': 'M',\n    'MTRA.': 'M'\n}\n\n# Crear la nueva columna \"sexo\" usando el mapeo\nsni['sexo'] = sni['grado'].map(mapeo_sexo)\n\n\nsni.anio.unique()\n\narray([2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n       2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2023])\n\n\n\nhistorico = sni.groupby([\"anio\"]).size()\nhistorico\n\nanio\n2000     6942\n2001     7514\n2002     8667\n2003     8667\n2004     9613\n2005    10287\n2006    11404\n2007    12662\n2008    13756\n2009    14522\n2010    15408\n2011    16305\n2012    17057\n2013    18085\n2014    19472\n2015    21182\n2016    22901\n2017    24970\n2018    26501\n2019    28427\n2020    32288\n2023    40575\ndtype: int64\n\n\n\n\nfig, ax = plt.subplots()\n\n# --- Gráfica de líneas (tu código de ejemplo) ---\nax.plot(historico.index, historico, color=\"purple\", label=\"Hombres\")\n\n# Eliminamos el eje y (ticks, labels y línea del eje)\nax.yaxis.set_visible(False)\nax.tick_params(axis='y', which='both', left=False, labelleft=False)\n\n\n# --- Marcadores y anotaciones de las series ---\nlast_year = total_anios.index.max()\n\n# # Serie de Hombres\nfor anio, valor in historico.items():\n    if anio % 5 == 0 or anio == last_year:\n        ax.plot(anio, valor, 'o', color=\"purple\")\n        if anio == last_year:\n            label = f\"{valor:,.0f} personas\\nen {anio}\"\n            ha_align = \"left\"\n            xy_coords = (anio, valor + 100)\n            offset = (10, -10)\n        else:\n            label = f\"{valor:,.0f}\"\n            ha_align = \"center\"\n            xy_coords = (anio, valor + 30)\n            offset = (0, 7)\n        ax.annotate(label,\n                    xy=xy_coords,\n                    xytext=offset,\n                    textcoords=\"offset points\",\n                    ha=ha_align,\n                    color=\"purple\",\n                    fontsize=10)\n\n# # Serie de Mujeres\n# for anio, valor in total_anios[\"M\"].items():\n#     if anio % 5 == 0 or anio == last_year:\n#         ax.plot(anio, valor, 'o', color=\"seagreen\")\n#         if anio == last_year:\n#             label = f\"{valor:,.0f} mujeres\\nen {anio}\"\n#             ha_align = \"left\"\n#             xy_coords = (anio, valor + 100)\n#             offset = (10, -10)\n#         else:\n#             label = f\"{valor:,.0f}\"\n#             ha_align = \"center\"\n#             xy_coords = (anio, valor + 30)\n#             offset = (0, 10)\n#         ax.annotate(label,\n#                     xy=xy_coords,\n#                     xytext=offset,\n#                     textcoords=\"offset points\",\n#                     ha=ha_align,\n#                     color=\"seagreen\",\n#                     fontsize=12)\n                    \n# --- Título usando ax.annotate ---\n# Se arma en dos líneas, usando coordenadas en \"axes fraction\" para posicionarlo relativo al área de la gráfica.\n# La primera línea se compone de varias anotaciones:\n#   \"Número de \" (color por defecto),\n#   \"mujeres\" (en seagreen),\n#   \" y \" (color por defecto),\n#   \"hombres\" (en naranja),\n#   \" en el\" (en gris).\n# ax.annotate(\"Número de \", \n#             xy=(0, 1.1), xycoords=\"axes fraction\", \n#             ha=\"left\", va=\"bottom\", fontsize=14)\n# ax.annotate(\"mujeres\", \n#             xy=(0.15, 1.1), xycoords=\"axes fraction\", \n#             ha=\"left\", va=\"bottom\", fontsize=14, color=\"seagreen\")\n# ax.annotate(\" y \", \n#             xy=(0.25, 1.1), xycoords=\"axes fraction\", \n#             ha=\"left\", va=\"bottom\", fontsize=14)\n# ax.annotate(\"hombres\", \n#             xy=(0.28, 1.1), xycoords=\"axes fraction\", \n#             ha=\"left\", va=\"bottom\", fontsize=14, color=\"orange\")\n# ax.annotate(\" en el\", \n#             xy=(0.39, 1.1), xycoords=\"axes fraction\", \n#             ha=\"left\", va=\"bottom\", fontsize=14, color=\"gray\")\n\n# Segunda línea completa del título\nax.annotate(\"Sistema Nacional de Investigadoras e Investigadores\", \n            xy=(0, 1.07), xycoords=\"axes fraction\", \n            ha=\"left\", va=\"top\", fontsize=14)\nax.set_ylim(0,50000)\nplt.show()\nfig.savefig(\"../historico.png\")\n\n\n\n\n\n\n\n\n\ntotal_anios = sni.groupby([\"anio\", \"sexo\"]).size().unstack(fill_value=0)\n\n\n\nfig, ax = plt.subplots()\n\n# --- Gráfica de líneas (tu código de ejemplo) ---\nax.plot(total_anios.index, total_anios[\"H\"], color=\"orange\", label=\"Hombres\")\nax.plot(total_anios.index, total_anios[\"M\"], color=\"seagreen\", label=\"Mujeres\")\n\n# Eliminamos el eje y (ticks, labels y línea del eje)\nax.yaxis.set_visible(False)\nax.tick_params(axis='y', which='both', left=False, labelleft=False)\n\n# (Si usabas ax.set_ylabel, lo comentamos o eliminamos)\n# ax.set_ylabel(\"Personas\")\n# ax.yaxis.set_major_formatter(mticker.StrMethodFormatter(\"{x:,.0f}\"))\n\n# --- Marcadores y anotaciones de las series ---\nlast_year = total_anios.index.max()\n\n# Serie de Hombres\nfor anio, valor in total_anios[\"H\"].items():\n    if anio % 5 == 0 or anio == last_year:\n        ax.plot(anio, valor, 'o', color=\"orange\")\n        if anio == last_year:\n            label = f\"{valor:,.0f} hombres\\nen {anio}\"\n            ha_align = \"left\"\n            xy_coords = (anio, valor + 100)\n            offset = (10, -10)\n        else:\n            label = f\"{valor:,.0f}\"\n            ha_align = \"center\"\n            xy_coords = (anio, valor + 30)\n            offset = (0, 5)\n        ax.annotate(label,\n                    xy=xy_coords,\n                    xytext=offset,\n                    textcoords=\"offset points\",\n                    ha=ha_align,\n                    color=\"orange\",\n                    fontsize=12)\n\n# Serie de Mujeres\nfor anio, valor in total_anios[\"M\"].items():\n    if anio % 5 == 0 or anio == last_year:\n        ax.plot(anio, valor, 'o', color=\"seagreen\")\n        if anio == last_year:\n            label = f\"{valor:,.0f} mujeres\\nen {anio}\"\n            ha_align = \"left\"\n            xy_coords = (anio, valor + 100)\n            offset = (10, -10)\n        else:\n            label = f\"{valor:,.0f}\"\n            ha_align = \"center\"\n            xy_coords = (anio, valor + 30)\n            offset = (0, 10)\n        ax.annotate(label,\n                    xy=xy_coords,\n                    xytext=offset,\n                    textcoords=\"offset points\",\n                    ha=ha_align,\n                    color=\"seagreen\",\n                    fontsize=12)\n                    \n# --- Título usando ax.annotate ---\n# Se arma en dos líneas, usando coordenadas en \"axes fraction\" para posicionarlo relativo al área de la gráfica.\n# La primera línea se compone de varias anotaciones:\n#   \"Número de \" (color por defecto),\n#   \"mujeres\" (en seagreen),\n#   \" y \" (color por defecto),\n#   \"hombres\" (en naranja),\n#   \" en el\" (en gris).\nax.annotate(\"Número de \", \n            xy=(0, 1.1), xycoords=\"axes fraction\", \n            ha=\"left\", va=\"bottom\", fontsize=14)\nax.annotate(\"mujeres\", \n            xy=(0.15, 1.1), xycoords=\"axes fraction\", \n            ha=\"left\", va=\"bottom\", fontsize=14, color=\"seagreen\")\nax.annotate(\" y \", \n            xy=(0.25, 1.1), xycoords=\"axes fraction\", \n            ha=\"left\", va=\"bottom\", fontsize=14)\nax.annotate(\"hombres\", \n            xy=(0.28, 1.1), xycoords=\"axes fraction\", \n            ha=\"left\", va=\"bottom\", fontsize=14, color=\"orange\")\nax.annotate(\" en el\", \n            xy=(0.39, 1.1), xycoords=\"axes fraction\", \n            ha=\"left\", va=\"bottom\", fontsize=14, color=\"gray\")\n\n# Segunda línea completa del título\nax.annotate(\"Sistema Nacional de Investigadoras e Investigadores\", \n            xy=(0, 1.07), xycoords=\"axes fraction\", \n            ha=\"left\", va=\"top\", fontsize=14)\n\nplt.show()\n\n\n\n\n\n\n\n\n\nfig, ax = plt.subplots(figsize=(10,6))\n\n\n# Eliminamos el eje y (ticks, labels y línea del eje)\nax.yaxis.set_visible(False)\nax.tick_params(axis='y', which='both', left=False, labelleft=False)\n\n\n# --- Trazamos las líneas para Hombres y Mujeres ---\nax.plot(total_anios.index, total_anios[\"H\"], color=\"orange\", label=\"Hombres\", linewidth=2)\nax.plot(total_anios.index, total_anios[\"M\"], color=\"seagreen\", label=\"Mujeres\", linewidth=2)\n\n# --- Relleno del área entre las dos curvas para resaltar la diferencia ---\nax.fill_between(total_anios.index, total_anios[\"H\"], total_anios[\"M\"],\n                where=(total_anios[\"H\"] &gt;= total_anios[\"M\"]),\n                interpolate=True, color=\"orange\", alpha=0.3, label=\"Mayor Hombres\")\nax.fill_between(total_anios.index, total_anios[\"H\"], total_anios[\"M\"],\n                where=(total_anios[\"H\"] &lt; total_anios[\"M\"]),\n                interpolate=True, color=\"seagreen\", alpha=0.3, label=\"Mayor Mujeres\")\n\n# --- Formateo de ejes ---\nax.set_xlabel(\"Año\")\nax.set_ylabel(\"Cantidad de personas\")\nax.yaxis.set_major_formatter(mticker.StrMethodFormatter(\"{x:,.0f}\"))\n\n# --- Título en dos líneas, alineado a la izquierda ---\ntitle = (\"Diferencia entre Hombres y Mujeres\\n\"\n         \"Sistema Nacional de Investigadoras e Investigadores\")\nax.set_title(title, loc=\"left\", fontsize=14)\n\n# --- Anotaciones de la diferencia ---\n# Se itera sobre cada año y se anota la diferencia (valor absoluto) entre las series\n# en el centro vertical entre ambas curvas.\nlast_year = total_anios.index.max()\nfor anio, h_value in total_anios[\"H\"].items():\n    if anio % 5 == 0 or anio == last_year:\n        m_value = total_anios[\"M\"].loc[anio]\n        diff = abs(h_value - m_value)\n        mid_y = (h_value + m_value) / 2\n        ax.annotate(f\"{diff:,.0f}\",\n                    xy=(anio, mid_y),\n                    ha=\"center\", va=\"center\",\n                    fontsize=12, color=\"black\",\n                    bbox=dict(boxstyle=\"round,pad=0.3\", fc=\"white\", ec=\"none\", alpha=0.7))\n\n# ax.legend(loc=\"best\")\nplt.show()"
  },
  {
    "objectID": "notebooks/001_EDA_exceles.html",
    "href": "notebooks/001_EDA_exceles.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\nimport glob as glob\n\n\narchivos = glob.glob(\"../data/historicos/*.xlsx\")\narchivos\n\n['../data/historicos\\\\Investigadores_vigentes_2000.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2001.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2002.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2003.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2004.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2005.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2006.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2007.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2008.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2009.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2010.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2012.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2013.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2014.xlsx',\n '../data/historicos\\\\Investigadores_Vigentes_2015.xlsx',\n '../data/historicos\\\\Investigadores_Vigentes_2016.xlsx',\n '../data/historicos\\\\Investigadores_Vigentes_2017.xlsx',\n '../data/historicos\\\\Investigadores_Vigentes_2018.xlsx',\n '../data/historicos\\\\Investigadores_Vigentes_2019.xlsx',\n '../data/historicos\\\\Investigadores_Vigentes_2020.xlsx',\n '../data/historicos\\\\Investigadores_vigentes_2023.xlsx',\n '../data/historicos\\\\Investigadore_vigentes_2011.xlsx']\n\n\n\n# columnas = [pd.read_excel(archivo).columns for archivo in archivos]\n# columnas\n\n\ndfs = []\nfor archivo in archivos:\n    try:\n        anio = archivo[-9:-5]\n        df = pd.read_excel(archivo)\n        df[\"anio\"] = anio\n        dfs.append(df)\n    except:\n        print(f\"El archivo {archivo} no se pudo leer\")\n\nsni = pd.concat(dfs,ignore_index=True)\n# sni.set_index(\"AÑO\",inplace=True)\n\n\nsni[\"anio\"].unique()\n\narray(['2000', '2001', '2002', '2003', '2004', '2005', '2006', '2007',\n       '2008', '2009', '2010', '2012', '2013', '2014', '2015', '2016',\n       '2017', '2018', '2019', '2020', '2023', '2011'], dtype=object)\n\n\n\nsni[[\n       'NOMBRE DE LA INVESTIGADORA O INVESTIGADOR', 'NOBILIS', 'NIVEL',\n       # 'FECHA DE INICIO DE VIGENCIA', 'FECHA DE FIN DE VIGENCIA',\n       'ÁREA DEL CONOCIMIENTO', 'DISCIPLINA (a partir de 1991)',\n       'SUBDISCIPLINA (a partir de 1991)', 'ESPECIALIDAD (a partir de 1991)',\n       'INSTITUCIÓN DE ADSCRIPCIÓN (a partir de 1990)',\n       'DEPENDENCIA (a partir de 1991)',\n       'ENTIDAD FEDERATIVA ADSCRIPCIÓN\\n(a partir de 1990)',\n       'PAIS ADSCRIPCIÓN \\n(a partir de 1990)', 'CVU',\n       'NOMBRE DE LA INVESTIGADORA O DEL INVESTIGADOR', 'DISCIPLINA',\n       'SUBDISCIPLINA', 'ESPECIALIDAD', 'INSTITUCIÓN DE ADSCRIPCIÓN',\n       'DEPENDENCIA', 'ENTIDAD FEDERATIVA', 'PAIS', \n        # 'ESTÍMULO ECONÓMICO',\n       'Estímulo Económico', \n        'GRADO ACADÉMICO', 'NOMBRE DEL INVESTIGADOR',\n       'EMÉRITO', 'VIVO?', 'DEPENDENCIA DE ADSCRIPCIÓN',\n       'ENTIDAD FEDERATIVA DE ADSCRIPCIÓN', 'PAÍS DE ADSCRIPCIÓN',\"anio\"]].to_csv(\"../data/sni_2000-2023.csv\")\n\n\nsni[\"AÑO\"].isna().sum()\n\nnp.int64(209292)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Evolución de la brecha de género en el SNII",
    "section": "",
    "text": "El SNII es un programa con el propósito de reconocer y fortalecer la labor de quienes producen conocimiento científico y desarrollan tecnología en México. Creado por Acuerdo Presidencial, publicado en el Diario Oficial de la Federación el 26 de julio de 1984\nA través de un proceso de evaluación por pares, el SNII otorga la distinción de investigadora o investigador nacional, un reconocimiento que simboliza la calidad y prestigio de sus contribuciones en diversas disciplinas del conocimiento.\nExisten los niveles:\n\nNivel candidatura\nNivel 1\nNivel 2\nNivel 3\nEmerit@\n\n\n\n\n\nEl SNII ha ido creciendo, desde el 2000 al 2023. En los últimos 23 años pasó de casi 7 mil a más de 40 mil personas pertenecientes."
  },
  {
    "objectID": "index.html#sistema-nacional-de-investigadoras-e-investigadores-snii",
    "href": "index.html#sistema-nacional-de-investigadoras-e-investigadores-snii",
    "title": "Evolución de la brecha de género en el SNII",
    "section": "",
    "text": "El SNII es un programa con el propósito de reconocer y fortalecer la labor de quienes producen conocimiento científico y desarrollan tecnología en México. Creado por Acuerdo Presidencial, publicado en el Diario Oficial de la Federación el 26 de julio de 1984\nA través de un proceso de evaluación por pares, el SNII otorga la distinción de investigadora o investigador nacional, un reconocimiento que simboliza la calidad y prestigio de sus contribuciones en diversas disciplinas del conocimiento.\nExisten los niveles:\n\nNivel candidatura\nNivel 1\nNivel 2\nNivel 3\nEmerit@\n\n\n\n\n\nEl SNII ha ido creciendo, desde el 2000 al 2023. En los últimos 23 años pasó de casi 7 mil a más de 40 mil personas pertenecientes."
  },
  {
    "objectID": "notebooks/002_DataCleaning.html",
    "href": "notebooks/002_DataCleaning.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\nimport missingno as msno\n\n\nf = \"../data/sni_2000-2023.zip\"\ntmp = pd.read_csv(f,index_col=0,compression=\"zip\")\nsni = pd.DataFrame()\nsni[\"grado\"] = tmp[\"NOBILIS\"].fillna(tmp[\"GRADO ACADÉMICO\"])\nsni[\"disciplina\"] = tmp[\"DISCIPLINA (a partir de 1991)\"].fillna(tmp[\"DISCIPLINA\"])\nsni[\"adscripcion\"] = tmp[\"INSTITUCIÓN DE ADSCRIPCIÓN (a partir de 1990)\"].fillna(tmp[\"INSTITUCIÓN DE ADSCRIPCIÓN\"])\nsni[\"entidad\"] = tmp[[\"ENTIDAD FEDERATIVA ADSCRIPCIÓN\\n(a partir de 1990)\", \n                            \"ENTIDAD FEDERATIVA DE ADSCRIPCIÓN\", \n                            \"ENTIDAD FEDERATIVA\"]].bfill(axis=1).iloc[:, 0]\nsni[\"dependencia\"] = tmp[[\"DEPENDENCIA (a partir de 1991)\", \n                            \"DEPENDENCIA\", \n                            \"DEPENDENCIA DE ADSCRIPCIÓN\"]].bfill(axis=1).iloc[:, 0]\n\nsni[\"area\"] = tmp[\"ÁREA DEL CONOCIMIENTO\"]\nsni[\"nivel\"] = tmp.NIVEL\nsni[\"anio\"] = tmp.anio\nmsno.matrix(tmp)\n\nC:\\Users\\gbv\\AppData\\Local\\Temp\\ipykernel_15100\\3149775917.py:2: DtypeWarning: Columns (1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28) have mixed types. Specify dtype option on import or set low_memory=False.\n  tmp = pd.read_csv(f,index_col=0,compression=\"zip\")\n\n\n\n\n\n\n\n\n\n\ntmp.columns\n\nIndex(['NOMBRE DE LA INVESTIGADORA O INVESTIGADOR', 'NOBILIS', 'NIVEL',\n       'ÁREA DEL CONOCIMIENTO', 'DISCIPLINA (a partir de 1991)',\n       'SUBDISCIPLINA (a partir de 1991)', 'ESPECIALIDAD (a partir de 1991)',\n       'INSTITUCIÓN DE ADSCRIPCIÓN (a partir de 1990)',\n       'DEPENDENCIA (a partir de 1991)',\n       'ENTIDAD FEDERATIVA ADSCRIPCIÓN\\n(a partir de 1990)',\n       'PAIS ADSCRIPCIÓN \\n(a partir de 1990)', 'CVU',\n       'NOMBRE DE LA INVESTIGADORA O DEL INVESTIGADOR', 'DISCIPLINA',\n       'SUBDISCIPLINA', 'ESPECIALIDAD', 'INSTITUCIÓN DE ADSCRIPCIÓN',\n       'DEPENDENCIA', 'ENTIDAD FEDERATIVA', 'PAIS', 'Estímulo Económico',\n       'GRADO ACADÉMICO', 'NOMBRE DEL INVESTIGADOR', 'EMÉRITO', 'VIVO?',\n       'DEPENDENCIA DE ADSCRIPCIÓN', 'ENTIDAD FEDERATIVA DE ADSCRIPCIÓN',\n       'PAÍS DE ADSCRIPCIÓN', 'anio'],\n      dtype='object')\n\n\n\nmsno.matrix(sni)\n\n\n\n\n\n\n\n\n\nsni.sort_values(by=\"anio\").to_csv(\"../data/002_processed/sni.csv\",index=False)"
  }
]